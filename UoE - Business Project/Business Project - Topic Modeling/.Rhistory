dplyr::select(Resolved, Upheld, Partial, Not) %>%
mutate(sum = Upheld + Partial + Not) %>%
filter(sum != Resolved)
# verify if year on year data is correct
# BF + New - Resolve = CF
df1 %>%
group_by(Year, Quarter) %>%
dplyr::rename(Resolved = Complaints_Total_Resolved,
Upheld = Complaints_Number_Upheld,
Partial = Complaints_Number_Partially_Upheld,
Not = Complaints_Number_Not_Upheld,
BF = Complaints_Total_Brought_Forward,
New = Complaints_Total_New,
CF = Complaints_Total_Carried_Forward) %>%
mutate(test = BF + New - Resolved) %>%
filter(test != CF)
df <- df1 %>%
dplyr::rename(Resolved = Complaints_Total_Resolved,
Upheld = Complaints_Number_Upheld,
Partial = Complaints_Number_Partially_Upheld,
Not = Complaints_Number_Not_Upheld,
BF = Complaints_Total_Brought_Forward,
New = Complaints_Total_New,
CF = Complaints_Total_Carried_Forward)
for (i in names(df1)){
I <- sum(is.na(i))
if(I != 0) print(paste(i, I))
}
# Unique organisation id
df1 %>%
group_by(Year, Quarter, Organisation_Code) %>%
mutate(z = length(Year)) %>%
filter(z != 1)
# Organisation Code match one organisation name only
df1$Organisation_Code %>% unique() %>% length() #530
df1$Organisation_Name %>% unique() %>% length() #543
# Organisation who do not report Quarterly
df1 %>%
group_by(Organisation_Code) %>%
summarise(z = length(Year)) %>%
dplyr::select(Organisation_Code, z) %>%
filter(z < 20)
#
df %>%
group_by(Organisation_Code, Organisation_Name) %>%
summarise(z = sum(New)) %>%
filter()
get("mutate", "package:dplyr")
df %>%
mutate(year = str_sub(Year,1, 4)) %>%
mutate(year = paste(year, Quarter)) %>%
group_by(year) %>%
summarise(New = sum(New)) %>%
ggplot(aes(x = year, y = New)) +
geom_col()
library(reshape)
#install.packages("reshape")
#install.packages("plotly")
library(plotly)
df %>%
group_by(Year, Quarter) %>%
summarise(BF = sum(BF),
New = sum(New),
Resolve = sum(Resolved),
CF = sum(CF), .groups = 'drop') %>%
mutate(year = str_sub(Year,1, 4)) %>%
mutate(year = as.numeric(year)) %>%
ggplot(aes(x = year, y = New, fill = Quarter)) +
geom_area()
df %>%
group_by(Year, Quarter) %>%
summarise(BF = sum(BF),
New = sum(New),
Resolve = sum(Resolved),
CF = sum(CF), .groups = 'drop') %>%
mutate(year = str_sub(Year,1, 4)) %>%
mutate(year = as.numeric(year)) %>%
mutate(year = paste(year, Quarter)) %>%
mutate(n = sqrt(New)) %>%
ggplot(aes(x = Quarter, fill = New, y = Year)) +
geom_tile() +
scale_fill_viridis_b() +
coord_polar(theta = "x")
df1 %>%
pull(Organisation_Type) %>%
unique()
names(df)
df %>%
mutate(year = str_sub(Year,1, 4)) %>%
mutate(year = as.numeric(year)) %>%
mutate(year = paste(year, Quarter)) %>%
mutate(n = sqrt(New)) %>%
ggplot(aes(x = year, fill = n, y = Organisation_Code)) +
geom_tile() +
scale_fill_viridis_b(guide = "none") +
scale_y_discrete(labels = NULL) +
theme_void()
# animation
df1 %>%
mutate(year = str_sub(Year,1, 4)) %>%
mutate(year = as.numeric(year)) %>%
mutate(qr = as.numeric(str_sub(Quarter,2, 2))) %>%
mutate(yr = year - 0.125 + qr*0.25) -> d
p <- d %>%
group_by(yr, NHS_England_Region_Name) %>%
summarise(value = mean(Complaints_Total_New)) %>%
ggplot(aes(y = value, x = factor(NHS_England_Region_Name))) + geom_col()
library(gganimate)
library(gifski)
library(png)
#install.packages("png")
a <- p + transition_time(yr, ) + labs(title = "year:{frame_time}")
animate(a, renderer = gifski_renderer())
d %>%
group_by(yr, NHS_England_Region_Name) %>%
summarise(value = mean(New), .groups = 'drop') %>%
filter(NHS_England_Region_Name != "Other") %>%
ggplot(aes(x = yr, y = value, color = NHS_England_Region_Name)) + geom_line() + scale_colour_viridis_d()
names(d])
names(d)
d %>%
group_by(yr, NHS_England_Region_Name) %>%
summarise(value = mean(Complaints_Total_New), .groups = 'drop') %>%
filter(NHS_England_Region_Name != "Other") %>%
ggplot(aes(x = yr, y = value, color = NHS_England_Region_Name)) + geom_line() + scale_colour_viridis_d()
install.packages("ggmap")
library(ggmap)
token = "pk.eyJ1IjoiZmxpYW5ndWsiLCJhIjoiY2t1Z3dkYXJ4MXI3ZDMybXR1czhjMnN3YSJ9.h8KmaN_vC0whFf34x1m84Q"
Sys.setenv("MAPBOX_TOKEN" = token)
library("rnaturalearth")
#install.packages("rnaturalearth")
#install.packages("raster")
library(raster)
#install.packages("sp")
library(sp)
uk <- raster::getData("GADM", country = "GB", level = 2)
plot(uk)
# Overview of misplaced dictionaries
df1 %>%
group_by(Organisation_Code, Organisation_Name) %>%
mutate(y = length(Year)) %>%
arrange(Organisation_Code, Organisation_Name) %>%
select(Organisation_Code, Organisation_Name) %>%
mutate(n = length(Organisation_Code)) %>%
ungroup() %>%
group_by(Organisation_Code) %>%
mutate(N = length(Organisation_Code)) %>%
filter(N!=n) %>%
mutate(name = paste(Organisation_Code, "-", Organisation_Name)) %>%
ungroup() %>%
group_by(name) %>%
summarise(n = mean(n))
# Overview of misplaced dictionaries
df1 %>%
group_by(Organisation_Code, Organisation_Name) %>%
mutate(y = length(Year)) %>%
arrange(Organisation_Code, Organisation_Name) %>%
dplyr::select(Organisation_Code, Organisation_Name) %>%
mutate(n = length(Organisation_Code)) %>%
ungroup() %>%
group_by(Organisation_Code) %>%
mutate(N = length(Organisation_Code)) %>%
filter(N!=n) %>%
mutate(name = paste(Organisation_Code, "-", Organisation_Name)) %>%
ungroup() %>%
group_by(name) %>%
summarise(n = mean(n))
# visualisation
df1 %>%
group_by(Organisation_Code, Organisation_Name) %>%
mutate(y = length(Year)) %>%
arrange(Organisation_Code, Organisation_Name) %>%
select(Organisation_Code, Organisation_Name) %>%
mutate(n = length(Organisation_Code)) %>%
ungroup() %>%
group_by(Organisation_Code) %>%
mutate(N = length(Organisation_Code)) %>%
filter(N!= n) %>%
ungroup() %>%
group_by(Organisation_Code, Organisation_Name) %>%
summarise(n = mean(n), N = mean(N)) %>%
ungroup() %>%
group_by(Organisation_Code) %>%
mutate(m = max(n)) %>%
mutate(cat = ifelse(m == n, "max", "min")) %>%
rows_update(tibble(Organisation_Name = "Positive Support in Tees", cat = "min")) -> df
# visualisation
df1 %>%
group_by(Organisation_Code, Organisation_Name) %>%
mutate(y = length(Year)) %>%
arrange(Organisation_Code, Organisation_Name) %>%
dplyr::select(Organisation_Code, Organisation_Name) %>%
mutate(n = length(Organisation_Code)) %>%
ungroup() %>%
group_by(Organisation_Code) %>%
mutate(N = length(Organisation_Code)) %>%
filter(N!= n) %>%
ungroup() %>%
group_by(Organisation_Code, Organisation_Name) %>%
summarise(n = mean(n), N = mean(N)) %>%
ungroup() %>%
group_by(Organisation_Code) %>%
mutate(m = max(n)) %>%
mutate(cat = ifelse(m == n, "max", "min")) %>%
rows_update(tibble(Organisation_Name = "Positive Support in Tees", cat = "min")) -> df
df %>% #`Positive Support in Tees` this is the situation of half half
ggplot(aes(y = n/N, x = Organisation_Code, fill = cat, label = Organisation_Name)) + geom_bar(position = 'fill', stat="identity") + theme(legend.position="none") +
scale_fill_viridis_d() -> g
#ggplotly(g)
# Simplified Version of Visualisation
library(plotly)
#install.packages("listviewer")
library(listviewer)
#ggplotly(g) %>%
#plotly_json()
filter(df, cat == "max") %>% pull(Organisation_Name) -> label_0
filter(df, cat == "min") %>% pull(Organisation_Name) -> label_1
filter(df, cat == "max") %>% pull(n) -> label_0n
filter(df, cat == "min") %>% pull(n) -> label_1n
ggplotly(g) %>%
style(traces = 1, text = paste(shQuote(label_0), "\noccurs" ,label_0n, "times")) %>%
style(traces = 2, text = paste(shQuote(label_1), "\noccurs",label_1n, "times"))   s
ggplotly(g) %>%
style(traces = 1, text = paste(shQuote(label_0), "\noccurs" ,label_0n, "times")) %>%
style(traces = 2, text = paste(shQuote(label_1), "\noccurs",label_1n, "times"))
library(readr)
#install.packages("tidyverse")
#install.packages("dplyr")
library(dplyr)
library(tidyverse)
Data_on_Written_Complaints_in_the_NHS_2019_20_KO41a_csv_Org_Level <- read_csv("raw/Data on Written Complaints in the NHS 2019-20 KO41a csv - Org Level.csv") #organisation level
Data_on_Written_Complaints_in_the_NHS_2019_20_KO41a_csv_Site_Level <- read_csv("raw/Data on Written Complaints in the NHS 2019-20 KO41a csv - Site Level.csv") #site level
df1 <- Data_on_Written_Complaints_in_the_NHS_2019_20_KO41a_csv_Org_Level
df2 <- Data_on_Written_Complaints_in_the_NHS_2019_20_KO41a_csv_Site_Level
df1 %>%
filter(str_detect(Organisation_Name, "NHS"))
theme_set(theme(
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_rect(fill = "#f7f7f7"),
plot.background = element_rect(fill = "white")
))
df1 %>%
dplyr::select(Organisation_Code, Year) %>%
pull(Year) %>%
unique()
names(df1)[5:11]
library(data.table)
library(ggplot2)
# verify if the data is correct
df1 %>%
rename(Resolved = Complaints_Total_Resolved,
Upheld = Complaints_Number_Upheld,
Partial = Complaints_Number_Partially_Upheld,
Not = Complaints_Number_Not_Upheld) %>%
dplyr::select(Resolved, Upheld, Partial, Not) %>%
mutate(sum = Upheld + Partial + Not) %>%
filter(sum != Resolved)
# verify if year on year data is correct
# BF + New - Resolve = CF
df1 %>%
group_by(Year, Quarter) %>%
dplyr::rename(Resolved = Complaints_Total_Resolved,
Upheld = Complaints_Number_Upheld,
Partial = Complaints_Number_Partially_Upheld,
Not = Complaints_Number_Not_Upheld,
BF = Complaints_Total_Brought_Forward,
New = Complaints_Total_New,
CF = Complaints_Total_Carried_Forward) %>%
mutate(test = BF + New - Resolved) %>%
filter(test != CF)
df <- df1 %>%
dplyr::rename(Resolved = Complaints_Total_Resolved,
Upheld = Complaints_Number_Upheld,
Partial = Complaints_Number_Partially_Upheld,
Not = Complaints_Number_Not_Upheld,
BF = Complaints_Total_Brought_Forward,
New = Complaints_Total_New,
CF = Complaints_Total_Carried_Forward)
for (i in names(df1)){
I <- sum(is.na(i))
if(I != 0) print(paste(i, I))
}
# Unique organisation id
df1 %>%
group_by(Year, Quarter, Organisation_Code) %>%
mutate(z = length(Year)) %>%
filter(z != 1)
# Organisation Code match one organisation name only
df1$Organisation_Code %>% unique() %>% length() #530
df1$Organisation_Name %>% unique() %>% length() #543
# Organisation who do not report Quarterly
df1 %>%
group_by(Organisation_Code) %>%
summarise(z = length(Year)) %>%
dplyr::select(Organisation_Code, z) %>%
filter(z < 20)
#
df %>%
group_by(Organisation_Code, Organisation_Name) %>%
summarise(z = sum(New)) %>%
filter()
get("mutate", "package:dplyr")
df %>%
mutate(year = str_sub(Year,1, 4)) %>%
mutate(year = paste(year, Quarter)) %>%
group_by(year) %>%
summarise(New = sum(New)) %>%
ggplot(aes(x = year, y = New)) +
geom_col()
library(reshape)
#install.packages("reshape")
#install.packages("plotly")
library(plotly)
df %>%
group_by(Year, Quarter) %>%
summarise(BF = sum(BF),
New = sum(New),
Resolve = sum(Resolved),
CF = sum(CF), .groups = 'drop') %>%
mutate(year = str_sub(Year,1, 4)) %>%
mutate(year = as.numeric(year)) %>%
ggplot(aes(x = year, y = New, fill = Quarter)) +
geom_area()
df1 %>%
pull(Organisation_Type) %>%
unique()
names(df)
df %>%
mutate(year = str_sub(Year,1, 4)) %>%
mutate(year = as.numeric(year)) %>%
mutate(year = paste(year, Quarter)) %>%
mutate(n = sqrt(New)) %>%
ggplot(aes(x = year, fill = n, y = Organisation_Code)) +
geom_tile() +
scale_fill_viridis_b(guide = "none") +
scale_y_discrete() +
theme_void()
# animation
df1 %>%
mutate(year = str_sub(Year,1, 4)) %>%
mutate(year = as.numeric(year)) %>%
mutate(qr = as.numeric(str_sub(Quarter,2, 2))) %>%
mutate(yr = year - 0.125 + qr*0.25) -> d
p <- d %>%
group_by(yr, NHS_England_Region_Name) %>%
summarise(value = mean(Complaints_Total_New)) %>%
ggplot(aes(y = value, x = factor(NHS_England_Region_Name))) + geom_col()
library(gganimate)
install.packages("gifski")
library(gifski)
library(png)
#install.packages("png")
a <- p + transition_time(yr, ) + labs(title = "year:{frame_time}")
animate(a, renderer = gifski_renderer())
install.packages("gifski")
d %>%
group_by(yr, NHS_England_Region_Name) %>%
summarise(value = mean(Complaints_Total_New), .groups = 'drop') %>%
filter(NHS_England_Region_Name != "Other") %>%
ggplot(aes(x = yr, y = value, color = NHS_England_Region_Name)) + geom_line() + scale_colour_viridis_d()
# Overview of misplaced dictionaries
df1 %>%
group_by(Organisation_Code, Organisation_Name) %>%
mutate(y = length(Year)) %>%
arrange(Organisation_Code, Organisation_Name) %>%
dplyr::select(Organisation_Code, Organisation_Name) %>%
mutate(n = length(Organisation_Code)) %>%
ungroup() %>%
group_by(Organisation_Code) %>%
mutate(N = length(Organisation_Code)) %>%
filter(N!=n) %>%
mutate(name = paste(Organisation_Code, "-", Organisation_Name)) %>%
ungroup() %>%
group_by(name) %>%
summarise(n = mean(n))
# Overview of misplaced dictionaries
df1 %>%
group_by(Organisation_Code, Organisation_Name) %>%
mutate(y = length(Year)) %>%
arrange(Organisation_Code, Organisation_Name) %>%
dplyr::select(Organisation_Code, Organisation_Name) %>%
mutate(n = length(Organisation_Code)) %>%
ungroup() %>%
group_by(Organisation_Code) %>%
mutate(N = length(Organisation_Code)) %>%
filter(N!=n) %>%
mutate(name = paste(Organisation_Code, "-", Organisation_Name)) %>%
ungroup() %>%
group_by(name) %>%
summarise(n = mean(n))
# Overview of misplaced dictionaries
df1 %>%
group_by(Organisation_Code, Organisation_Name) %>%
mutate(y = length(Year)) %>%
arrange(Organisation_Code, Organisation_Name) %>%
dplyr::select(Organisation_Code, Organisation_Name) %>%
mutate(n = length(Organisation_Code)) %>%
ungroup() %>%
group_by(Organisation_Code) %>%
mutate(N = length(Organisation_Code)) %>%
filter(N!=n) %>%
mutate(name = paste(Organisation_Code, "-", Organisation_Name)) %>%
ungroup() %>%
group_by(name) %>%
summarise(n = mean(n))
# visualisation
df1 %>%
group_by(Organisation_Code, Organisation_Name) %>%
mutate(y = length(Year)) %>%
arrange(Organisation_Code, Organisation_Name) %>%
dplyr::select(Organisation_Code, Organisation_Name) %>%
mutate(n = length(Organisation_Code)) %>%
ungroup() %>%
group_by(Organisation_Code) %>%
mutate(N = length(Organisation_Code)) %>%
filter(N!= n) %>%
ungroup() %>%
group_by(Organisation_Code, Organisation_Name) %>%
summarise(n = mean(n), N = mean(N)) %>%
ungroup() %>%
group_by(Organisation_Code) %>%
mutate(m = max(n)) %>%
mutate(cat = ifelse(m == n, "max", "min")) %>%
rows_update(tibble(Organisation_Name = "Positive Support in Tees", cat = "min")) -> df
df %>% #`Positive Support in Tees` this is the situation of half half
ggplot(aes(y = n/N, x = Organisation_Code, fill = cat, label = Organisation_Name)) + geom_bar(position = 'fill', stat="identity") + theme(legend.position="none") +
scale_fill_viridis_d() -> g
#ggplotly(g)
# Simplified Version of Visualisation
library(plotly)
#install.packages("listviewer")
library(listviewer)
#ggplotly(g) %>%
#plotly_json()
filter(df, cat == "max") %>% pull(Organisation_Name) -> label_0
filter(df, cat == "min") %>% pull(Organisation_Name) -> label_1
filter(df, cat == "max") %>% pull(n) -> label_0n
filter(df, cat == "min") %>% pull(n) -> label_1n
ggplotly(g) %>%
style(traces = 1, text = paste(shQuote(label_0), "\noccurs" ,label_0n, "times")) %>%
style(traces = 2, text = paste(shQuote(label_1), "\noccurs",label_1n, "times"))
# visualisation
df1 %>%
group_by(Organisation_Code, Organisation_Name) %>%
mutate(y = length(Year)) %>%
arrange(Organisation_Code, Organisation_Name) %>%
dplyr::select(Organisation_Code, Organisation_Name) %>%
mutate(n = length(Organisation_Code)) %>%
ungroup() %>%
group_by(Organisation_Code) %>%
mutate(N = length(Organisation_Code)) %>%
filter(N!= n) %>%
ungroup() %>%
group_by(Organisation_Code, Organisation_Name) %>%
summarise(n = mean(n), N = mean(N)) %>%
ungroup() %>%
group_by(Organisation_Code) %>%
mutate(m = max(n)) %>%
mutate(cat = ifelse(m == n, "max", "min")) %>%
rows_update(tibble(Organisation_Name = "Positive Support in Tees", cat = "min")) -> df
df %>% #`Positive Support in Tees` this is the situation of half half
ggplot(aes(y = n/N, x = Organisation_Code, fill = cat, label = Organisation_Name)) + geom_bar(position = 'fill', stat="identity") + theme(legend.position="none") +
scale_fill_viridis_d() -> g
#ggplotly(g)
# Simplified Version of Visualisation
library(plotly)
#install.packages("listviewer")
library(listviewer)
#ggplotly(g) %>%
#plotly_json()
filter(df, cat == "max") %>% pull(Organisation_Name) -> label_0
filter(df, cat == "min") %>% pull(Organisation_Name) -> label_1
filter(df, cat == "max") %>% pull(n) -> label_0n
filter(df, cat == "min") %>% pull(n) -> label_1n
ggplotly(g) %>%
style(traces = 1, text = paste(shQuote(label_0), "\noccurs" ,label_0n, "times")) %>%
style(traces = 2, text = paste(shQuote(label_1), "\noccurs",label_1n, "times"))
df %>%
group_by(Organisation_Code) %>%
mutate(nn = length(N)) %>%
filter(nn != 2)
df1$Organisation_Code %>% unique() %>% length()
names(df1)
setwd("~/Dropbox/Projects/Archieve/UoE - Business Project/Business Project - Topic Modeling")
load(file = "RData/enviroment.RData")
cooked_csv
cooked_csv %>% names()
library(tidyverse)
cooked_csv %>% names()
abstractText
?left_join()
cooked_csv
names(cooked_csv)
cooked_csv$ProjectId
cooked_csv %>%
left_join(abstractText, by = c("id"= "ProjectId")) %>%
select(Title,StartDate,EndDate,LeadROName, AwardPounds, )
cooked_csv %>%
left_join(abstractText, by = c("id"= "ProjectId"))
cooked_csv %>%
left_join(abstractText, by = c("ProjectId" = 'id'))
abstractText
cooked_csv %>%
left_join(abstractText, by = c("ProjectId" = 'id'))
cooked_csv %>%
left_join(abstractText, by = c("ProjectId" = 'id')) %>%
select(Title,StartDate,EndDate,LeadROName, AwardPounds, abstractText)
cooked_csv %>%
left_join(abstractText, by = c("ProjectId" = 'id')) %>%
select(Title,StartDate,EndDate,LeadROName, AwardPounds, abstractText)
